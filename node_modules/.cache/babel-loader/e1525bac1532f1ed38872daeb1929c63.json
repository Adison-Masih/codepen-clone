{"ast":null,"code":"import _slicedToArray from\"D:\\\\ReactJS\\\\codepen-clone\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useState}from\"react\";import\"codemirror/lib/codemirror.css\";import\"codemirror/theme/material.css\";import\"codemirror/mode/xml/xml\";import\"codemirror/mode/javascript/javascript\";import\"codemirror/mode/css/css\";import{Controlled as ControlledEditor}from\"react-codemirror2\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import{faCompressAlt,faExpandAlt}from\"@fortawesome/free-solid-svg-icons\";function Editor(props){var displayName=props.displayName,language=props.language,value=props.value,onChange=props.onChange;function handleChange(editor,data,value){onChange(value);}var _useState=useState(true),_useState2=_slicedToArray(_useState,2),open=_useState2[0],setOpen=_useState2[1];return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(\"div\",{className:\"editor-container \".concat(open?\"\":\"collapsed\")},/*#__PURE__*/React.createElement(\"div\",{className:\"editor-title\"},displayName,/*#__PURE__*/React.createElement(\"button\",{onClick:function onClick(){return setOpen(function(prevOpen){return!prevOpen;});},type:\"button\",className:\"expand-collapse-button\"},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:open?faCompressAlt:faExpandAlt}))),/*#__PURE__*/React.createElement(ControlledEditor,{onBeforeChange:handleChange,value:value,className:\"code-mirror-wrapper\",options:{lineWrapping:true,lint:true,mode:language,lineNumbers:true,theme:\"material\",autofocus:true,autocorrect:true}})));}export default Editor;","map":{"version":3,"sources":["D:/ReactJS/codepen-clone/src/Components/Editor.jsx"],"names":["React","useState","Controlled","ControlledEditor","FontAwesomeIcon","faCompressAlt","faExpandAlt","Editor","props","displayName","language","value","onChange","handleChange","editor","data","open","setOpen","prevOpen","lineWrapping","lint","mode","lineNumbers","theme","autofocus","autocorrect"],"mappings":"sJAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,KAAgC,OAAhC,CACA,MAAO,+BAAP,CACA,MAAO,+BAAP,CACA,MAAO,yBAAP,CACA,MAAO,uCAAP,CACA,MAAO,yBAAP,CACA,OAASC,UAAU,GAAIC,CAAAA,gBAAvB,KAA+C,mBAA/C,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,OAASC,aAAT,CAAwBC,WAAxB,KAA2C,mCAA3C,CAEA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,IACbC,CAAAA,WADa,CAC8BD,KAD9B,CACbC,WADa,CACAC,QADA,CAC8BF,KAD9B,CACAE,QADA,CACUC,KADV,CAC8BH,KAD9B,CACUG,KADV,CACiBC,QADjB,CAC8BJ,KAD9B,CACiBI,QADjB,CAGrB,QAASC,CAAAA,YAAT,CAAsBC,MAAtB,CAA8BC,IAA9B,CAAoCJ,KAApC,CAA2C,CACzCC,QAAQ,CAACD,KAAD,CAAR,CACD,CALoB,cAOGV,QAAQ,CAAC,IAAD,CAPX,wCAOde,IAPc,eAORC,OAPQ,eASrB,mBACE,qDACE,2BAAK,SAAS,4BAAsBD,IAAI,CAAG,EAAH,CAAQ,WAAlC,CAAd,eACE,2BAAK,SAAS,CAAC,cAAf,EACGP,WADH,cAEE,8BACE,OAAO,CAAE,yBAAMQ,CAAAA,OAAO,CAAC,SAACC,QAAD,QAAc,CAACA,QAAf,EAAD,CAAb,EADX,CAEE,IAAI,CAAC,QAFP,CAGE,SAAS,CAAC,wBAHZ,eAKE,oBAAC,eAAD,EAAiB,IAAI,CAAEF,IAAI,CAAGX,aAAH,CAAmBC,WAA9C,EALF,CAFF,CADF,cAYE,oBAAC,gBAAD,EACE,cAAc,CAAEO,YADlB,CAEE,KAAK,CAAEF,KAFT,CAGE,SAAS,CAAC,qBAHZ,CAIE,OAAO,CAAE,CACPQ,YAAY,CAAE,IADP,CAEPC,IAAI,CAAE,IAFC,CAGPC,IAAI,CAAEX,QAHC,CAIPY,WAAW,CAAE,IAJN,CAKPC,KAAK,CAAE,UALA,CAMPC,SAAS,CAAE,IANJ,CAOPC,WAAW,CAAE,IAPN,CAJX,EAZF,CADF,CADF,CA+BD,CAED,cAAelB,CAAAA,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\nfunction Editor(props) {\r\n  const { displayName, language, value, onChange } = props;\r\n\r\n  function handleChange(editor, data, value) {\r\n    onChange(value);\r\n  }\r\n\r\n  const [open, setOpen] = useState(true);\r\n\r\n  return (\r\n    <>\r\n      <div className={`editor-container ${open ? \"\" : \"collapsed\"}`}>\r\n        <div className=\"editor-title\">\r\n          {displayName}\r\n          <button\r\n            onClick={() => setOpen((prevOpen) => !prevOpen)}\r\n            type=\"button\"\r\n            className=\"expand-collapse-button\"\r\n          >\r\n            <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n          </button>\r\n        </div>\r\n\r\n        <ControlledEditor\r\n          onBeforeChange={handleChange}\r\n          value={value}\r\n          className=\"code-mirror-wrapper\"\r\n          options={{\r\n            lineWrapping: true,\r\n            lint: true,\r\n            mode: language,\r\n            lineNumbers: true,\r\n            theme: \"material\",\r\n            autofocus: true,\r\n            autocorrect: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n"]},"metadata":{},"sourceType":"module"}