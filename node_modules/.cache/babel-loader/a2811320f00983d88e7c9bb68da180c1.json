{"ast":null,"code":"var _jsxFileName = \"D:\\\\ReactJS\\\\codepen-clone\\\\src\\\\Components\\\\Editor.jsx\";\nimport React, { useState } from \"react\";\nimport \"codemirror/lib/codemirror.css\";\nimport \"codemirror/theme/material.css\";\nimport \"codemirror/mode/xml/xml\";\nimport \"codemirror/mode/javascript/javascript\";\nimport \"codemirror/mode/css/css\";\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { Resizable } from \"re-resizable\";\n\nfunction Editor(props) {\n  const {\n    displayName,\n    language,\n    value,\n    onChange\n  } = props;\n  con;\n\n  function handleChange(editor, data, value) {\n    onChange(value);\n  }\n\n  function doNothing(editor, data, value) {\n    onChange(\"\");\n  }\n\n  const [open, setOpen] = useState(true);\n  const style = {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  };\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: `editor-container ${open ? \"\" : \"collapsed\"}`,\n    disabled: open ? false : \"disabled\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"editor-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, displayName, /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => {\n      setOpen(prevOpen => !prevOpen);\n    },\n    type: \"button\",\n    className: \"expand-collapse-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: open ? faCompressAlt : faExpandAlt,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(ControlledEditor, {\n    onBeforeChange: open ? handleChange : doNothing,\n    value: open ? value : \"\",\n    className: \"code-mirror-wrapper\",\n    options: {\n      lineWrapping: true,\n      lint: true,\n      mode: language,\n      lineNumbers: true,\n      theme: \"material\",\n      autofocus: true,\n      autocorrect: true,\n      autoCloseTags: true,\n      matchBrackets: true,\n      autoCloseBrackets: true,\n      extraKeys: {\n        \"Ctrl-Space\": \"autocomplete\"\n      },\n      autoScroll: true,\n      autoCursor: true\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  })));\n}\n\nexport default Editor;","map":{"version":3,"sources":["D:/ReactJS/codepen-clone/src/Components/Editor.jsx"],"names":["React","useState","Controlled","ControlledEditor","FontAwesomeIcon","faCompressAlt","faExpandAlt","Resizable","Editor","props","displayName","language","value","onChange","con","handleChange","editor","data","doNothing","open","setOpen","style","display","alignItems","justifyContent","prevOpen","lineWrapping","lint","mode","lineNumbers","theme","autofocus","autocorrect","autoCloseTags","matchBrackets","autoCloseBrackets","extraKeys","autoScroll","autoCursor"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,+BAAP;AACA,OAAO,+BAAP;AACA,OAAO,yBAAP;AACA,OAAO,uCAAP;AACA,OAAO,yBAAP;AACA,SAASC,UAAU,IAAIC,gBAAvB,QAA+C,mBAA/C;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,EAAwBC,WAAxB,QAA2C,mCAA3C;AACA,SAASC,SAAT,QAA0B,cAA1B;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,QAAM;AAAEC,IAAAA,WAAF;AAAeC,IAAAA,QAAf;AAAyBC,IAAAA,KAAzB;AAAgCC,IAAAA;AAAhC,MAA6CJ,KAAnD;AAEAK,EAAAA,GAAG;;AAEH,WAASC,YAAT,CAAsBC,MAAtB,EAA8BC,IAA9B,EAAoCL,KAApC,EAA2C;AACzCC,IAAAA,QAAQ,CAACD,KAAD,CAAR;AACD;;AAED,WAASM,SAAT,CAAmBF,MAAnB,EAA2BC,IAA3B,EAAiCL,KAAjC,EAAwC;AACtCC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACD;;AAED,QAAM,CAACM,IAAD,EAAOC,OAAP,IAAkBnB,QAAQ,CAAC,IAAD,CAAhC;AAEA,QAAMoB,KAAK,GAAG;AACZC,IAAAA,OAAO,EAAE,MADG;AAEZC,IAAAA,UAAU,EAAE,QAFA;AAGZC,IAAAA,cAAc,EAAE;AAHJ,GAAd;AAMA,sBACE,uDACE;AACE,IAAA,SAAS,EAAG,oBAAmBL,IAAI,GAAG,EAAH,GAAQ,WAAY,EADzD;AAEE,IAAA,QAAQ,EAAEA,IAAI,GAAG,KAAH,GAAW,UAF3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAIE;AAAK,IAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGT,WADH,eAEE;AACE,IAAA,OAAO,EAAE,MAAM;AAAEU,MAAAA,OAAO,CAAEK,QAAD,IAAc,CAACA,QAAhB,CAAP;AAAoC,KADvD;AAEE,IAAA,IAAI,EAAC,QAFP;AAGE,IAAA,SAAS,EAAC,wBAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEN,IAAI,GAAGd,aAAH,GAAmBC,WAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,CAFF,CAJF,eAeE,oBAAC,gBAAD;AACE,IAAA,cAAc,EAAEa,IAAI,GAAGJ,YAAH,GAAkBG,SADxC;AAEE,IAAA,KAAK,EAAEC,IAAI,GAAGP,KAAH,GAAW,EAFxB;AAGE,IAAA,SAAS,EAAC,qBAHZ;AAIE,IAAA,OAAO,EAAE;AACPc,MAAAA,YAAY,EAAE,IADP;AAEPC,MAAAA,IAAI,EAAE,IAFC;AAGPC,MAAAA,IAAI,EAAEjB,QAHC;AAIPkB,MAAAA,WAAW,EAAE,IAJN;AAKPC,MAAAA,KAAK,EAAE,UALA;AAMPC,MAAAA,SAAS,EAAE,IANJ;AAOPC,MAAAA,WAAW,EAAE,IAPN;AAQPC,MAAAA,aAAa,EAAE,IARR;AASPC,MAAAA,aAAa,EAAE,IATR;AAUPC,MAAAA,iBAAiB,EAAE,IAVZ;AAWPC,MAAAA,SAAS,EAAE;AACT,sBAAc;AADL,OAXJ;AAcPC,MAAAA,UAAU,EAAE,IAdL;AAePC,MAAAA,UAAU,EAAE;AAfL,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CADF,CADF;AA0CD;;AAED,eAAe9B,MAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"codemirror/lib/codemirror.css\";\r\nimport \"codemirror/theme/material.css\";\r\nimport \"codemirror/mode/xml/xml\";\r\nimport \"codemirror/mode/javascript/javascript\";\r\nimport \"codemirror/mode/css/css\";\r\nimport { Controlled as ControlledEditor } from \"react-codemirror2\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCompressAlt, faExpandAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { Resizable } from \"re-resizable\";\r\n\r\nfunction Editor(props) {\r\n  const { displayName, language, value, onChange } = props;\r\n\r\n  con\r\n\r\n  function handleChange(editor, data, value) {\r\n    onChange(value);\r\n  }\r\n\r\n  function doNothing(editor, data, value) {\r\n    onChange(\"\");\r\n  }\r\n\r\n  const [open, setOpen] = useState(true);\r\n\r\n  const style = {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={`editor-container ${open ? \"\" : \"collapsed\"}`}\r\n        disabled={open ? false : \"disabled\"}\r\n      >\r\n        <div className=\"editor-title\">\r\n          {displayName}\r\n          <button\r\n            onClick={() => { setOpen((prevOpen) => !prevOpen);  }}\r\n            type=\"button\"\r\n            className=\"expand-collapse-button\"\r\n          >\r\n            <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt} />\r\n          </button>\r\n        </div>\r\n\r\n        <ControlledEditor\r\n          onBeforeChange={open ? handleChange : doNothing}\r\n          value={open ? value : \"\"}\r\n          className=\"code-mirror-wrapper\"\r\n          options={{\r\n            lineWrapping: true,\r\n            lint: true,\r\n            mode: language,\r\n            lineNumbers: true,\r\n            theme: \"material\",\r\n            autofocus: true,\r\n            autocorrect: true,\r\n            autoCloseTags: true,\r\n            matchBrackets: true,\r\n            autoCloseBrackets: true,\r\n            extraKeys: {\r\n              \"Ctrl-Space\": \"autocomplete\",\r\n            },\r\n            autoScroll: true,\r\n            autoCursor: true,\r\n          }}\r\n        />\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Editor;\r\n"]},"metadata":{},"sourceType":"module"}